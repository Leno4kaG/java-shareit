DROP TABLE IF EXISTS public.bookings CASCADE;
DROP TABLE IF EXISTS public.users CASCADE;
DROP TABLE IF EXISTS public.items CASCADE;
DROP TABLE IF EXISTS public.requests CASCADE;
DROP TABLE IF EXISTS public."comments" CASCADE;


CREATE TABLE public.users (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar NULL,
	email varchar NULL,
	CONSTRAINT users_pk PRIMARY KEY (id)
);
CREATE UNIQUE INDEX users_id_idx ON public.users USING btree (id);

CREATE TABLE public.requests (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	description varchar NULL,
	requestor_id BIGINT NULL,
	CONSTRAINT requests_pk PRIMARY KEY (id),
	CONSTRAINT requests_fk FOREIGN KEY (requestor_id) REFERENCES public.users(id)
);
CREATE UNIQUE INDEX requests_id_idx ON public.requests USING btree (id);

CREATE TABLE public.items (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar NULL,
	description varchar NULL,
	is_available bool NULL,
	owner_id BIGINT NULL,
	request_id BIGINT NULL,
	last_booking_id BIGINT,
    next_booking_id BIGINT,
	CONSTRAINT items_pk PRIMARY KEY (id),
	CONSTRAINT items_fk FOREIGN KEY (owner_id) REFERENCES public.users(id),
	CONSTRAINT items_fk_1 FOREIGN KEY (request_id) REFERENCES public.requests(id)
);
CREATE UNIQUE INDEX items_id_idx ON public.items USING btree (id);

CREATE TABLE public.bookings (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	item_id BIGINT NULL,
	booker_id BIGINT NULL,
	status varchar NULL,
	CONSTRAINT bookings_pk PRIMARY KEY (id),
	CONSTRAINT bookings_fk FOREIGN KEY (booker_id) REFERENCES public.users(id),
	CONSTRAINT bookings_fk_1 FOREIGN KEY (item_id) REFERENCES public.items(id)
);
CREATE UNIQUE INDEX booking_id_idx ON public.bookings USING btree (id);

CREATE TABLE public."comments" (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"text" varchar NULL,
	item_id BIGINT NULL,
	author_id BIGINT NULL,
	created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	CONSTRAINT comments_pk PRIMARY KEY (id),
	CONSTRAINT comments_fk FOREIGN KEY (item_id) REFERENCES public.items(id),
	CONSTRAINT comments_fk_1 FOREIGN KEY (author_id) REFERENCES public.users(id)
);
CREATE UNIQUE INDEX comments_id_idx ON public."comments" USING btree (id);